{"ast":null,"code":"// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nvar defaultMakeData = function () {\n  return Object.create(null);\n}; // Useful for processing arguments objects as well as arrays.\n\n\nvar _a = Array.prototype,\n    forEach = _a.forEach,\n    slice = _a.slice;\n\nvar Trie =\n/** @class */\nfunction () {\n  function Trie(weakness, makeData) {\n    if (weakness === void 0) {\n      weakness = true;\n    }\n\n    if (makeData === void 0) {\n      makeData = defaultMakeData;\n    }\n\n    this.weakness = weakness;\n    this.makeData = makeData;\n  }\n\n  Trie.prototype.lookup = function () {\n    var array = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      array[_i] = arguments[_i];\n    }\n\n    return this.lookupArray(array);\n  };\n\n  Trie.prototype.lookupArray = function (array) {\n    var node = this;\n    forEach.call(array, function (key) {\n      return node = node.getChildTrie(key);\n    });\n    return node.data || (node.data = this.makeData(slice.call(array)));\n  };\n\n  Trie.prototype.getChildTrie = function (key) {\n    var map = this.weakness && isObjRef(key) ? this.weak || (this.weak = new WeakMap()) : this.strong || (this.strong = new Map());\n    var child = map.get(key);\n    if (!child) map.set(key, child = new Trie(this.weakness, this.makeData));\n    return child;\n  };\n\n  return Trie;\n}();\n\nfunction isObjRef(value) {\n  switch (typeof value) {\n    case \"object\":\n      if (value === null) break;\n    // Fall through to return true...\n\n    case \"function\":\n      return true;\n  }\n\n  return false;\n}\n\nexport { Trie };","map":{"version":3,"sources":["C:/Users/Tapiwanashe Shoshore/Documents/Projects/spring.graphql.client/node_modules/@wry/trie/lib/trie.esm.js"],"names":["defaultMakeData","Object","create","_a","Array","prototype","forEach","slice","Trie","weakness","makeData","lookup","array","_i","arguments","length","lookupArray","node","call","key","getChildTrie","data","map","isObjRef","weak","WeakMap","strong","Map","child","get","set","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,eAAe,GAAG,YAAY;AAAE,SAAOC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAP;AAA6B,CAAjE,C,CACA;;;AACA,IAAIC,EAAE,GAAGC,KAAK,CAACC,SAAf;AAAA,IAA0BC,OAAO,GAAGH,EAAE,CAACG,OAAvC;AAAA,IAAgDC,KAAK,GAAGJ,EAAE,CAACI,KAA3D;;AACA,IAAIC,IAAI;AAAG;AAAe,YAAY;AAClC,WAASA,IAAT,CAAcC,QAAd,EAAwBC,QAAxB,EAAkC;AAC9B,QAAID,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,IAAX;AAAkB;;AAC7C,QAAIC,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAGV,eAAX;AAA6B;;AACxD,SAAKS,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AACDF,EAAAA,IAAI,CAACH,SAAL,CAAeM,MAAf,GAAwB,YAAY;AAChC,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,KAAK,CAACC,EAAD,CAAL,GAAYC,SAAS,CAACD,EAAD,CAArB;AACH;;AACD,WAAO,KAAKG,WAAL,CAAiBJ,KAAjB,CAAP;AACH,GAND;;AAOAJ,EAAAA,IAAI,CAACH,SAAL,CAAeW,WAAf,GAA6B,UAAUJ,KAAV,EAAiB;AAC1C,QAAIK,IAAI,GAAG,IAAX;AACAX,IAAAA,OAAO,CAACY,IAAR,CAAaN,KAAb,EAAoB,UAAUO,GAAV,EAAe;AAAE,aAAOF,IAAI,GAAGA,IAAI,CAACG,YAAL,CAAkBD,GAAlB,CAAd;AAAuC,KAA5E;AACA,WAAOF,IAAI,CAACI,IAAL,KAAcJ,IAAI,CAACI,IAAL,GAAY,KAAKX,QAAL,CAAcH,KAAK,CAACW,IAAN,CAAWN,KAAX,CAAd,CAA1B,CAAP;AACH,GAJD;;AAKAJ,EAAAA,IAAI,CAACH,SAAL,CAAee,YAAf,GAA8B,UAAUD,GAAV,EAAe;AACzC,QAAIG,GAAG,GAAG,KAAKb,QAAL,IAAiBc,QAAQ,CAACJ,GAAD,CAAzB,GACJ,KAAKK,IAAL,KAAc,KAAKA,IAAL,GAAY,IAAIC,OAAJ,EAA1B,CADI,GAEJ,KAAKC,MAAL,KAAgB,KAAKA,MAAL,GAAc,IAAIC,GAAJ,EAA9B,CAFN;AAGA,QAAIC,KAAK,GAAGN,GAAG,CAACO,GAAJ,CAAQV,GAAR,CAAZ;AACA,QAAI,CAACS,KAAL,EACIN,GAAG,CAACQ,GAAJ,CAAQX,GAAR,EAAaS,KAAK,GAAG,IAAIpB,IAAJ,CAAS,KAAKC,QAAd,EAAwB,KAAKC,QAA7B,CAArB;AACJ,WAAOkB,KAAP;AACH,GARD;;AASA,SAAOpB,IAAP;AACH,CA7ByB,EAA1B;;AA8BA,SAASe,QAAT,CAAkBQ,KAAlB,EAAyB;AACrB,UAAQ,OAAOA,KAAf;AACI,SAAK,QAAL;AACI,UAAIA,KAAK,KAAK,IAAd,EACI;AACR;;AACA,SAAK,UAAL;AACI,aAAO,IAAP;AANR;;AAQA,SAAO,KAAP;AACH;;AAED,SAASvB,IAAT","sourcesContent":["// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\r\n// object keys weakly, yet can also hold non-object keys, unlike the\r\n// native `WeakMap`.\r\n// If no makeData function is supplied, the looked-up data will be an empty,\r\n// null-prototype Object.\r\nvar defaultMakeData = function () { return Object.create(null); };\r\n// Useful for processing arguments objects as well as arrays.\r\nvar _a = Array.prototype, forEach = _a.forEach, slice = _a.slice;\r\nvar Trie = /** @class */ (function () {\r\n    function Trie(weakness, makeData) {\r\n        if (weakness === void 0) { weakness = true; }\r\n        if (makeData === void 0) { makeData = defaultMakeData; }\r\n        this.weakness = weakness;\r\n        this.makeData = makeData;\r\n    }\r\n    Trie.prototype.lookup = function () {\r\n        var array = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            array[_i] = arguments[_i];\r\n        }\r\n        return this.lookupArray(array);\r\n    };\r\n    Trie.prototype.lookupArray = function (array) {\r\n        var node = this;\r\n        forEach.call(array, function (key) { return node = node.getChildTrie(key); });\r\n        return node.data || (node.data = this.makeData(slice.call(array)));\r\n    };\r\n    Trie.prototype.getChildTrie = function (key) {\r\n        var map = this.weakness && isObjRef(key)\r\n            ? this.weak || (this.weak = new WeakMap())\r\n            : this.strong || (this.strong = new Map());\r\n        var child = map.get(key);\r\n        if (!child)\r\n            map.set(key, child = new Trie(this.weakness, this.makeData));\r\n        return child;\r\n    };\r\n    return Trie;\r\n}());\r\nfunction isObjRef(value) {\r\n    switch (typeof value) {\r\n        case \"object\":\r\n            if (value === null)\r\n                break;\r\n        // Fall through to return true...\r\n        case \"function\":\r\n            return true;\r\n    }\r\n    return false;\r\n}\n\nexport { Trie };\n"]},"metadata":{},"sourceType":"module"}