{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { OperationBatcher } from \"./batching.js\";\nexport { OperationBatcher } from \"./batching.js\";\n\nvar BatchLink = function (_super) {\n  __extends(BatchLink, _super);\n\n  function BatchLink(fetchParams) {\n    var _this = _super.call(this) || this;\n\n    var _a = fetchParams || {},\n        batchDebounce = _a.batchDebounce,\n        _b = _a.batchInterval,\n        batchInterval = _b === void 0 ? 10 : _b,\n        _c = _a.batchMax,\n        batchMax = _c === void 0 ? 0 : _c,\n        _d = _a.batchHandler,\n        batchHandler = _d === void 0 ? function () {\n      return null;\n    } : _d,\n        _e = _a.batchKey,\n        batchKey = _e === void 0 ? function () {\n      return '';\n    } : _e;\n\n    _this.batcher = new OperationBatcher({\n      batchDebounce: batchDebounce,\n      batchInterval: batchInterval,\n      batchMax: batchMax,\n      batchHandler: batchHandler,\n      batchKey: batchKey\n    });\n\n    if (fetchParams.batchHandler.length <= 1) {\n      _this.request = function (operation) {\n        return _this.batcher.enqueueRequest({\n          operation: operation\n        });\n      };\n    }\n\n    return _this;\n  }\n\n  BatchLink.prototype.request = function (operation, forward) {\n    return this.batcher.enqueueRequest({\n      operation: operation,\n      forward: forward\n    });\n  };\n\n  return BatchLink;\n}(ApolloLink);\n\nexport { BatchLink };","map":{"version":3,"sources":["C:/Users/Tapiwanashe Shoshore/Documents/Projects/spring.graphql/spring.graphql.client/node_modules/@apollo/client/link/batch/batchLink.js"],"names":["__extends","ApolloLink","OperationBatcher","BatchLink","_super","fetchParams","_this","call","_a","batchDebounce","_b","batchInterval","_c","batchMax","_d","batchHandler","_e","batchKey","batcher","length","request","operation","enqueueRequest","prototype","forward"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASA,gBAAT,QAAiC,eAAjC;;AACA,IAAIC,SAAS,GAAI,UAAUC,MAAV,EAAkB;AAC/BJ,EAAAA,SAAS,CAACG,SAAD,EAAYC,MAAZ,CAAT;;AACA,WAASD,SAAT,CAAmBE,WAAnB,EAAgC;AAC5B,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACA,QAAIC,EAAE,GAAGH,WAAW,IAAI,EAAxB;AAAA,QAA4BI,aAAa,GAAGD,EAAE,CAACC,aAA/C;AAAA,QAA8DC,EAAE,GAAGF,EAAE,CAACG,aAAtE;AAAA,QAAqFA,aAAa,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA1H;AAAA,QAA8HE,EAAE,GAAGJ,EAAE,CAACK,QAAtI;AAAA,QAAgJA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAA/K;AAAA,QAAmLE,EAAE,GAAGN,EAAE,CAACO,YAA3L;AAAA,QAAyMA,YAAY,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,YAAY;AAAE,aAAO,IAAP;AAAc,KAA5C,GAA+CA,EAAvQ;AAAA,QAA2QE,EAAE,GAAGR,EAAE,CAACS,QAAnR;AAAA,QAA6RA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,YAAY;AAAE,aAAO,EAAP;AAAY,KAA1C,GAA6CA,EAArV;;AACAV,IAAAA,KAAK,CAACY,OAAN,GAAgB,IAAIhB,gBAAJ,CAAqB;AACjCO,MAAAA,aAAa,EAAEA,aADkB;AAEjCE,MAAAA,aAAa,EAAEA,aAFkB;AAGjCE,MAAAA,QAAQ,EAAEA,QAHuB;AAIjCE,MAAAA,YAAY,EAAEA,YAJmB;AAKjCE,MAAAA,QAAQ,EAAEA;AALuB,KAArB,CAAhB;;AAOA,QAAIZ,WAAW,CAACU,YAAZ,CAAyBI,MAAzB,IAAmC,CAAvC,EAA0C;AACtCb,MAAAA,KAAK,CAACc,OAAN,GAAgB,UAAUC,SAAV,EAAqB;AAAE,eAAOf,KAAK,CAACY,OAAN,CAAcI,cAAd,CAA6B;AAAED,UAAAA,SAAS,EAAEA;AAAb,SAA7B,CAAP;AAAgE,OAAvG;AACH;;AACD,WAAOf,KAAP;AACH;;AACDH,EAAAA,SAAS,CAACoB,SAAV,CAAoBH,OAApB,GAA8B,UAAUC,SAAV,EAAqBG,OAArB,EAA8B;AACxD,WAAO,KAAKN,OAAL,CAAaI,cAAb,CAA4B;AAC/BD,MAAAA,SAAS,EAAEA,SADoB;AAE/BG,MAAAA,OAAO,EAAEA;AAFsB,KAA5B,CAAP;AAIH,GALD;;AAMA,SAAOrB,SAAP;AACH,CAxBgB,CAwBfF,UAxBe,CAAjB;;AAyBA,SAASE,SAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { OperationBatcher } from \"./batching.js\";\nexport { OperationBatcher } from \"./batching.js\";\nvar BatchLink = (function (_super) {\n    __extends(BatchLink, _super);\n    function BatchLink(fetchParams) {\n        var _this = _super.call(this) || this;\n        var _a = fetchParams || {}, batchDebounce = _a.batchDebounce, _b = _a.batchInterval, batchInterval = _b === void 0 ? 10 : _b, _c = _a.batchMax, batchMax = _c === void 0 ? 0 : _c, _d = _a.batchHandler, batchHandler = _d === void 0 ? function () { return null; } : _d, _e = _a.batchKey, batchKey = _e === void 0 ? function () { return ''; } : _e;\n        _this.batcher = new OperationBatcher({\n            batchDebounce: batchDebounce,\n            batchInterval: batchInterval,\n            batchMax: batchMax,\n            batchHandler: batchHandler,\n            batchKey: batchKey,\n        });\n        if (fetchParams.batchHandler.length <= 1) {\n            _this.request = function (operation) { return _this.batcher.enqueueRequest({ operation: operation }); };\n        }\n        return _this;\n    }\n    BatchLink.prototype.request = function (operation, forward) {\n        return this.batcher.enqueueRequest({\n            operation: operation,\n            forward: forward,\n        });\n    };\n    return BatchLink;\n}(ApolloLink));\nexport { BatchLink };\n"]},"metadata":{},"sourceType":"module"}