{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { InvariantError, invariant } from \"../../utilities/globals/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { validateOperation, createOperation, transformOperation } from \"../utils/index.js\";\n\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\n\nfunction toLink(handler) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nfunction isTerminating(link) {\n  return link.request.length <= 1;\n}\n\nvar LinkError = function (_super) {\n  __extends(LinkError, _super);\n\n  function LinkError(message, link) {\n    var _this = _super.call(this, message) || this;\n\n    _this.link = link;\n    return _this;\n  }\n\n  return LinkError;\n}(Error);\n\nvar ApolloLink = function () {\n  function ApolloLink(request) {\n    if (request) this.request = request;\n  }\n\n  ApolloLink.empty = function () {\n    return new ApolloLink(function () {\n      return Observable.of();\n    });\n  };\n\n  ApolloLink.from = function (links) {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce(function (x, y) {\n      return x.concat(y);\n    });\n  };\n\n  ApolloLink.split = function (test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      return new ApolloLink(function (operation) {\n        return test(operation) ? leftLink.request(operation) || Observable.of() : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      return new ApolloLink(function (operation, forward) {\n        return test(operation) ? leftLink.request(operation, forward) || Observable.of() : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n  };\n\n  ApolloLink.execute = function (link, operation) {\n    return link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of();\n  };\n\n  ApolloLink.concat = function (first, second) {\n    var firstLink = toLink(first);\n\n    if (isTerminating(firstLink)) {\n      __DEV__ && invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n      return firstLink;\n    }\n\n    var nextLink = toLink(second);\n\n    if (isTerminating(nextLink)) {\n      return new ApolloLink(function (operation) {\n        return firstLink.request(operation, function (op) {\n          return nextLink.request(op) || Observable.of();\n        }) || Observable.of();\n      });\n    } else {\n      return new ApolloLink(function (operation, forward) {\n        return firstLink.request(operation, function (op) {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of();\n      });\n    }\n  };\n\n  ApolloLink.prototype.split = function (test, left, right) {\n    return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\n  };\n\n  ApolloLink.prototype.concat = function (next) {\n    return ApolloLink.concat(this, next);\n  };\n\n  ApolloLink.prototype.request = function (operation, forward) {\n    throw __DEV__ ? new InvariantError('request is not implemented') : new InvariantError(19);\n  };\n\n  ApolloLink.prototype.onError = function (error, observer) {\n    if (observer && observer.error) {\n      observer.error(error);\n      return false;\n    }\n\n    throw error;\n  };\n\n  ApolloLink.prototype.setOnError = function (fn) {\n    this.onError = fn;\n    return this;\n  };\n\n  return ApolloLink;\n}();\n\nexport { ApolloLink };","map":{"version":3,"sources":["C:/Users/Tapiwanashe Shoshore/Documents/Projects/spring.graphql.client/node_modules/@apollo/client/link/core/ApolloLink.js"],"names":["__extends","InvariantError","invariant","Observable","validateOperation","createOperation","transformOperation","passthrough","op","forward","of","toLink","handler","ApolloLink","isTerminating","link","request","length","LinkError","_super","message","_this","call","Error","empty","from","links","map","reduce","x","y","concat","split","test","left","right","leftLink","rightLink","operation","execute","context","first","second","firstLink","__DEV__","warn","nextLink","prototype","next","onError","error","observer","setOnError","fn"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { InvariantError, invariant } from \"../../utilities/globals/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { validateOperation, createOperation, transformOperation, } from \"../utils/index.js\";\nfunction passthrough(op, forward) {\n    return (forward ? forward(op) : Observable.of());\n}\nfunction toLink(handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nvar LinkError = (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nvar ApolloLink = (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.empty = function () {\n        return new ApolloLink(function () { return Observable.of(); });\n    };\n    ApolloLink.from = function (links) {\n        if (links.length === 0)\n            return ApolloLink.empty();\n        return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n    };\n    ApolloLink.split = function (test, left, right) {\n        var leftLink = toLink(left);\n        var rightLink = toLink(right || new ApolloLink(passthrough));\n        if (isTerminating(leftLink) && isTerminating(rightLink)) {\n            return new ApolloLink(function (operation) {\n                return test(operation)\n                    ? leftLink.request(operation) || Observable.of()\n                    : rightLink.request(operation) || Observable.of();\n            });\n        }\n        else {\n            return new ApolloLink(function (operation, forward) {\n                return test(operation)\n                    ? leftLink.request(operation, forward) || Observable.of()\n                    : rightLink.request(operation, forward) || Observable.of();\n            });\n        }\n    };\n    ApolloLink.execute = function (link, operation) {\n        return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n    };\n    ApolloLink.concat = function (first, second) {\n        var firstLink = toLink(first);\n        if (isTerminating(firstLink)) {\n            __DEV__ && invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n            return firstLink;\n        }\n        var nextLink = toLink(second);\n        if (isTerminating(nextLink)) {\n            return new ApolloLink(function (operation) {\n                return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n            });\n        }\n        else {\n            return new ApolloLink(function (operation, forward) {\n                return (firstLink.request(operation, function (op) {\n                    return nextLink.request(op, forward) || Observable.of();\n                }) || Observable.of());\n            });\n        }\n    };\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return ApolloLink.concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw __DEV__ ? new InvariantError('request is not implemented') : new InvariantError(19);\n    };\n    ApolloLink.prototype.onError = function (error, observer) {\n        if (observer && observer.error) {\n            observer.error(error);\n            return false;\n        }\n        throw error;\n    };\n    ApolloLink.prototype.setOnError = function (fn) {\n        this.onError = fn;\n        return this;\n    };\n    return ApolloLink;\n}());\nexport { ApolloLink };\n"]},"metadata":{},"sourceType":"module"}