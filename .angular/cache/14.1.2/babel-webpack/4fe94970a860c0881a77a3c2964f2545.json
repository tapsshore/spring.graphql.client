{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { print } from 'graphql';\n;\nvar defaultHttpOptions = {\n  includeQuery: true,\n  includeExtensions: false\n};\nvar defaultHeaders = {\n  accept: '*/*',\n  'content-type': 'application/json'\n};\nvar defaultOptions = {\n  method: 'POST'\n};\nexport var fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions\n};\nexport var defaultPrinter = function (ast, printer) {\n  return printer(ast);\n};\nexport function selectHttpOptionsAndBody(operation, fallbackConfig) {\n  var configs = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    configs[_i - 2] = arguments[_i];\n  }\n\n  configs.unshift(fallbackConfig);\n  return selectHttpOptionsAndBodyInternal.apply(void 0, __spreadArray([operation, defaultPrinter], configs, false));\n}\nexport function selectHttpOptionsAndBodyInternal(operation, printer) {\n  var configs = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    configs[_i - 2] = arguments[_i];\n  }\n\n  var options = {};\n  var http = {};\n  configs.forEach(function (config) {\n    options = __assign(__assign(__assign({}, options), config.options), {\n      headers: __assign(__assign({}, options.headers), headersToLowerCase(config.headers))\n    });\n\n    if (config.credentials) {\n      options.credentials = config.credentials;\n    }\n\n    http = __assign(__assign({}, http), config.http);\n  });\n  var operationName = operation.operationName,\n      extensions = operation.extensions,\n      variables = operation.variables,\n      query = operation.query;\n  var body = {\n    operationName: operationName,\n    variables: variables\n  };\n  if (http.includeExtensions) body.extensions = extensions;\n  if (http.includeQuery) body.query = printer(query, print);\n  return {\n    options: options,\n    body: body\n  };\n}\n;\n\nfunction headersToLowerCase(headers) {\n  if (headers) {\n    var normalized_1 = Object.create(null);\n    Object.keys(Object(headers)).forEach(function (name) {\n      normalized_1[name.toLowerCase()] = headers[name];\n    });\n    return normalized_1;\n  }\n\n  return headers;\n}","map":{"version":3,"sources":["C:/Users/Tapiwanashe Shoshore/Documents/Projects/spring.graphql.client/node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js"],"names":["__assign","__spreadArray","print","defaultHttpOptions","includeQuery","includeExtensions","defaultHeaders","accept","defaultOptions","method","fallbackHttpConfig","http","headers","options","defaultPrinter","ast","printer","selectHttpOptionsAndBody","operation","fallbackConfig","configs","_i","arguments","length","unshift","selectHttpOptionsAndBodyInternal","apply","forEach","config","headersToLowerCase","credentials","operationName","extensions","variables","query","body","normalized_1","Object","create","keys","name","toLowerCase"],"mappings":"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","sourcesContent":["import { __assign, __spreadArray } from \"tslib\";\nimport { print } from 'graphql';\n;\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n};\nvar defaultHeaders = {\n    accept: '*/*',\n    'content-type': 'application/json',\n};\nvar defaultOptions = {\n    method: 'POST',\n};\nexport var fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nexport var defaultPrinter = function (ast, printer) { return printer(ast); };\nexport function selectHttpOptionsAndBody(operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    configs.unshift(fallbackConfig);\n    return selectHttpOptionsAndBodyInternal.apply(void 0, __spreadArray([operation,\n        defaultPrinter], configs, false));\n}\nexport function selectHttpOptionsAndBodyInternal(operation, printer) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = {};\n    var http = {};\n    configs.forEach(function (config) {\n        options = __assign(__assign(__assign({}, options), config.options), { headers: __assign(__assign({}, options.headers), headersToLowerCase(config.headers)) });\n        if (config.credentials) {\n            options.credentials = config.credentials;\n        }\n        http = __assign(__assign({}, http), config.http);\n    });\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    if (http.includeQuery)\n        body.query = printer(query, print);\n    return {\n        options: options,\n        body: body,\n    };\n}\n;\nfunction headersToLowerCase(headers) {\n    if (headers) {\n        var normalized_1 = Object.create(null);\n        Object.keys(Object(headers)).forEach(function (name) {\n            normalized_1[name.toLowerCase()] = headers[name];\n        });\n        return normalized_1;\n    }\n    return headers;\n}\n"]},"metadata":{},"sourceType":"module"}