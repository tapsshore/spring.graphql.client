{"ast":null,"code":"import { isReference, isField, DeepMerger, resultKeyNameFromField, shouldInclude, isNonNullObject, compact } from \"../../utilities/index.js\";\nexport var hasOwn = Object.prototype.hasOwnProperty;\nexport function defaultDataIdFromObject(_a, context) {\n  var __typename = _a.__typename,\n      id = _a.id,\n      _id = _a._id;\n\n  if (typeof __typename === \"string\") {\n    if (context) {\n      context.keyObject = id !== void 0 ? {\n        id: id\n      } : _id !== void 0 ? {\n        _id: _id\n      } : void 0;\n    }\n\n    if (id === void 0) id = _id;\n\n    if (id !== void 0) {\n      return \"\".concat(__typename, \":\").concat(typeof id === \"number\" || typeof id === \"string\" ? id : JSON.stringify(id));\n    }\n  }\n}\nvar defaultConfig = {\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  canonizeResults: false\n};\nexport function normalizeConfig(config) {\n  return compact(defaultConfig, config);\n}\nexport function shouldCanonizeResults(config) {\n  var value = config.canonizeResults;\n  return value === void 0 ? defaultConfig.canonizeResults : value;\n}\nexport function getTypenameFromStoreObject(store, objectOrReference) {\n  return isReference(objectOrReference) ? store.get(objectOrReference.__ref, \"__typename\") : objectOrReference && objectOrReference.__typename;\n}\nexport var TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\nexport function fieldNameFromStoreName(storeFieldName) {\n  var match = storeFieldName.match(TypeOrFieldNameRegExp);\n  return match ? match[0] : storeFieldName;\n}\nexport function selectionSetMatchesResult(selectionSet, result, variables) {\n  if (isNonNullObject(result)) {\n    return isArray(result) ? result.every(function (item) {\n      return selectionSetMatchesResult(selectionSet, item, variables);\n    }) : selectionSet.selections.every(function (field) {\n      if (isField(field) && shouldInclude(field, variables)) {\n        var key = resultKeyNameFromField(field);\n        return hasOwn.call(result, key) && (!field.selectionSet || selectionSetMatchesResult(field.selectionSet, result[key], variables));\n      }\n\n      return true;\n    });\n  }\n\n  return false;\n}\nexport function storeValueIsStoreObject(value) {\n  return isNonNullObject(value) && !isReference(value) && !isArray(value);\n}\nexport function makeProcessedFieldsMerger() {\n  return new DeepMerger();\n}\nexport var isArray = function (a) {\n  return Array.isArray(a);\n};","map":{"version":3,"sources":["C:/Users/Tapiwanashe Shoshore/Documents/Projects/spring.graphql/spring.graphql.client/node_modules/@apollo/client/cache/inmemory/helpers.js"],"names":["isReference","isField","DeepMerger","resultKeyNameFromField","shouldInclude","isNonNullObject","compact","hasOwn","Object","prototype","hasOwnProperty","defaultDataIdFromObject","_a","context","__typename","id","_id","keyObject","concat","JSON","stringify","defaultConfig","dataIdFromObject","addTypename","resultCaching","canonizeResults","normalizeConfig","config","shouldCanonizeResults","value","getTypenameFromStoreObject","store","objectOrReference","get","__ref","TypeOrFieldNameRegExp","fieldNameFromStoreName","storeFieldName","match","selectionSetMatchesResult","selectionSet","result","variables","isArray","every","item","selections","field","key","call","storeValueIsStoreObject","makeProcessedFieldsMerger","a","Array"],"mappings":"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","sourcesContent":["import { isReference, isField, DeepMerger, resultKeyNameFromField, shouldInclude, isNonNullObject, compact, } from \"../../utilities/index.js\";\nexport var hasOwn = Object.prototype.hasOwnProperty;\nexport function defaultDataIdFromObject(_a, context) {\n    var __typename = _a.__typename, id = _a.id, _id = _a._id;\n    if (typeof __typename === \"string\") {\n        if (context) {\n            context.keyObject =\n                id !== void 0 ? { id: id } :\n                    _id !== void 0 ? { _id: _id } :\n                        void 0;\n        }\n        if (id === void 0)\n            id = _id;\n        if (id !== void 0) {\n            return \"\".concat(__typename, \":\").concat((typeof id === \"number\" ||\n                typeof id === \"string\") ? id : JSON.stringify(id));\n        }\n    }\n}\nvar defaultConfig = {\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    canonizeResults: false,\n};\nexport function normalizeConfig(config) {\n    return compact(defaultConfig, config);\n}\nexport function shouldCanonizeResults(config) {\n    var value = config.canonizeResults;\n    return value === void 0 ? defaultConfig.canonizeResults : value;\n}\nexport function getTypenameFromStoreObject(store, objectOrReference) {\n    return isReference(objectOrReference)\n        ? store.get(objectOrReference.__ref, \"__typename\")\n        : objectOrReference && objectOrReference.__typename;\n}\nexport var TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\nexport function fieldNameFromStoreName(storeFieldName) {\n    var match = storeFieldName.match(TypeOrFieldNameRegExp);\n    return match ? match[0] : storeFieldName;\n}\nexport function selectionSetMatchesResult(selectionSet, result, variables) {\n    if (isNonNullObject(result)) {\n        return isArray(result)\n            ? result.every(function (item) { return selectionSetMatchesResult(selectionSet, item, variables); })\n            : selectionSet.selections.every(function (field) {\n                if (isField(field) && shouldInclude(field, variables)) {\n                    var key = resultKeyNameFromField(field);\n                    return hasOwn.call(result, key) &&\n                        (!field.selectionSet ||\n                            selectionSetMatchesResult(field.selectionSet, result[key], variables));\n                }\n                return true;\n            });\n    }\n    return false;\n}\nexport function storeValueIsStoreObject(value) {\n    return isNonNullObject(value) &&\n        !isReference(value) &&\n        !isArray(value);\n}\nexport function makeProcessedFieldsMerger() {\n    return new DeepMerger;\n}\nexport var isArray = function (a) { return Array.isArray(a); };\n"]},"metadata":{},"sourceType":"module"}